/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Cards {
  id: Generated<number>;
  round_id: number;
  selected: Generated<boolean>;
  team_id: number;
  word: string;
}

export interface Clues {
  clue: string;
  clue_number: number;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  player_id: number;
  turn_id: number;
}

export interface Decks {
  created_at: Generated<Timestamp>;
  deck: Generated<number>;
  id: Generated<number>;
  language_code: Generated<string>;
  word: string;
}

export interface Games {
  created_at: Generated<Timestamp>;
  game_format: string;
  game_type: string;
  id: Generated<number>;
  public_id: string;
  status_id: number;
  updated_at: Generated<Timestamp | null>;
}

export interface GameStatus {
  id: number;
  status_name: string;
}

export interface Guesses {
  card_id: number;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  player_id: number;
  turn_id: number;
}

export interface PlayerRoles {
  id: number;
  role_name: string;
}

export interface PlayerRoundRoles {
  assigned_at: Generated<Timestamp>;
  player_id: number;
  role_id: number;
  round_id: number;
}

export interface Players {
  game_id: number;
  id: Generated<number>;
  /**
   * Public-facing name shown to other players
   */
  public_name: string;
  status_id: number;
  status_last_changed: Generated<Timestamp>;
  team_id: number;
  updated_at: Generated<Timestamp | null>;
  user_id: number;
}

export interface PlayerStatuses {
  id: number;
  status_name: string;
}

export interface Rounds {
  created_at: Generated<Timestamp>;
  game_id: number;
  id: Generated<number>;
  round_number: number;
  /**
   * Current status of the round (setup, in progress, completed)
   */
  status_id: number;
  updated_at: Generated<Timestamp | null>;
}

export interface RoundStatus {
  id: number;
  status_name: string;
}

export interface Teams {
  game_id: number;
  id: Generated<number>;
  team_name: string;
}

export interface Turns {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  round_id: number;
  team_id: number;
}

export interface Users {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  username: string;
}

export interface DB {
  cards: Cards;
  clues: Clues;
  decks: Decks;
  game_status: GameStatus;
  games: Games;
  guesses: Guesses;
  player_roles: PlayerRoles;
  player_round_roles: PlayerRoundRoles;
  player_statuses: PlayerStatuses;
  players: Players;
  round_status: RoundStatus;
  rounds: Rounds;
  teams: Teams;
  turns: Turns;
  users: Users;
}
